version: '3'

services:
  postgres-db:
    image: 'postgres:13.1-alpine'
    container_name: postgres-db-container
    environment:
      POSTGRES_DB: ${POSTGRES_DATABASE}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./server/cocktail-service/src/main/resources/data.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - 5432:5432
    networks:
      - spring-cloud-microservices

  cocktail-service:
    build:
      context: .
      dockerfile: ./server/cocktail-service/Dockerfile
    container_name: cocktail-service-container
    restart: always
    depends_on:
      - postgres-db
      - react-ui
    environment:
      - DB_HOST=postgres-db
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_SCHEMA=${DB_SCHEMA}
      - ACTIVE_PROFILE=${ACTIVE_PROFILE}
      - PORT=${COCKTAIL_SERVICE_PORT}
      - REACT_CLIENT_URL=${REACT_CLIENT_URL}
    links:
      - postgres-db:postgres
    expose:
      - ${COCKTAIL_SERVICE_PORT}
    ports:
      - ${COCKTAIL_SERVICE_PORT}:${COCKTAIL_SERVICE_PORT}
    networks:
      - spring-cloud-microservices

  react-ui:
    build:
      context: .
      dockerfile: ./client/Dockerfile
    container_name: react-service-container
    stdin_open: true
    restart: always
    expose:
      - ${REACT_APP_PORT}
    ports:
      - ${REACT_APP_PORT}:${REACT_APP_PORT}
    environment:
      - REACT_APP_COCKTAIL_SERVICE_PORT=${COCKTAIL_SERVICE_PORT}
      - REACT_APP_ENVIRONMENT=${REACT_APP_ENVIRONMENT}
    volumes:
      - ./client:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - postgres-db
    networks:
      - spring-cloud-microservices
networks:
  spring-cloud-microservices:
    external: true